version: '^3.8'

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: myapp-app
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www
            - ./docker/scripts:/scripts
        networks:
            - myapp
        depends_on:
            - db

    nginx:
        image: nginx:latest
        container_name: myapp-nginx
        restart: unless-stopped
        ports:
            - '${APP_PORT:-80}:80'
        volumes:
            - ./:/var/www
            - ./docker/nginx/conf.d:/etc/nginx/conf.d
        networks:
            - myapp

    db:
        image: mysql:8.0
        container_name: myapp-db
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - mysql-data:/var/lib/mysql
        ports:
            - "3306:3306"
        networks:
            - myapp
            - app-network

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: myapp-phpmyadmin
        restart: unless-stopped
        environment:
            PMA_HOST: db
            PMA_PORT: 3306
            PMA_USER: ${DB_USERNAME}
            PMA_PASSWORD: ${DB_PASSWORD}
        ports:
            - "8081:80"
        networks:
            - myapp

    redis:
        image: redis:alpine
        container_name: myapp-redis
        restart: unless-stopped
        ports:
            - "6379:6379"
        networks:
            - myapp

networks:
    myapp:
        driver: bridge
    app-network:
        driver: bridge

volumes:
    mysql-data:
        driver: local
